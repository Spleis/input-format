{"version":3,"sources":["../source/template formatter.test.js"],"names":["describe","it","formatter","template","to","equal","text"],"mappings":";;AAAA;;AAEA;;;;;;AAEAA,SAAS,oBAAT,EAA+B,YAC/B;AACCC,IAAG,8BAAH,EAAmC,YACnC;AACC,MAAMC,YAAY,iCAAmB,mBAAnB,CAAlB;;AAEA,oBAAOA,UAAU,EAAV,EAAcC,QAArB,EAA+BC,EAA/B,CAAkCC,KAAlC,CAAwC,mBAAxC;;AAEA,oBAAOH,UAAU,GAAV,EAAeI,IAAtB,EAA4BF,EAA5B,CAA+BC,KAA/B,CAAqC,GAArC;AACA,oBAAOH,UAAU,IAAV,EAAgBI,IAAvB,EAA6BF,EAA7B,CAAgCC,KAAhC,CAAsC,MAAtC;AACA,oBAAOH,UAAU,KAAV,EAAiBI,IAAxB,EAA8BF,EAA9B,CAAiCC,KAAjC,CAAuC,OAAvC;AACA,oBAAOH,UAAU,MAAV,EAAkBI,IAAzB,EAA+BF,EAA/B,CAAkCC,KAAlC,CAAwC,QAAxC;AACA,oBAAOH,UAAU,OAAV,EAAmBI,IAA1B,EAAgCF,EAAhC,CAAmCC,KAAnC,CAAyC,WAAzC;AACA,oBAAOH,UAAU,QAAV,EAAoBI,IAA3B,EAAiCF,EAAjC,CAAoCC,KAApC,CAA0C,YAA1C;AACA,oBAAOH,UAAU,SAAV,EAAqBI,IAA5B,EAAkCF,EAAlC,CAAqCC,KAArC,CAA2C,aAA3C;AACA,oBAAOH,UAAU,UAAV,EAAsBI,IAA7B,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4C,eAA5C;AACA,oBAAOH,UAAU,WAAV,EAAuBI,IAA9B,EAAoCF,EAApC,CAAuCC,KAAvC,CAA6C,gBAA7C;AACA,oBAAOH,UAAU,YAAV,EAAwBI,IAA/B,EAAqCF,EAArC,CAAwCC,KAAxC,CAA8C,kBAA9C;AACA,oBAAOH,UAAU,aAAV,EAAyBI,IAAhC,EAAsCF,EAAtC,CAAyCC,KAAzC,CAA+C,mBAA/C;AACA,EAjBD;;AAmBAJ,IAAG,uCAAH,EAA4C,YAC5C;AACC,MAAMC,YAAY,iCAAmB,SAAnB,CAAlB;;AAEA,oBAAOA,UAAU,EAAV,EAAcI,IAArB,EAA2BF,EAA3B,CAA8BC,KAA9B,CAAoC,EAApC;AACA,oBAAOH,UAAU,GAAV,EAAeI,IAAtB,EAA4BF,EAA5B,CAA+BC,KAA/B,CAAqC,IAArC;AACA,oBAAOH,UAAU,IAAV,EAAgBI,IAAvB,EAA6BF,EAA7B,CAAgCC,KAAhC,CAAsC,MAAtC;AACA,oBAAOH,UAAU,KAAV,EAAiBI,IAAxB,EAA8BF,EAA9B,CAAiCC,KAAjC,CAAuC,SAAvC;AACA;AACA,oBAAOH,UAAU,MAAV,EAAkBI,IAAzB,EAA+BF,EAA/B,CAAkCC,KAAlC,CAAwC,SAAxC;AACA,EAVD;;AAYAJ,IAAG,mCAAH,EAAwC,YACxC;AACC,MAAMC,YAAY,iCAAmB,mBAAnB,CAAlB;;AAEA,oBAAOA,UAAU,aAAV,EAAyBI,IAAhC,EAAsCF,EAAtC,CAAyCC,KAAzC,CAA+C,mBAA/C;AACA,EALD;;AAOAJ,IAAG,kCAAH,EAAuC,YACvC;AACC,MAAMC,YAAY,iCAAmB,mBAAnB,EAAwC,GAAxC,CAAlB;;AAEA,oBAAOA,UAAU,aAAV,EAAyBI,IAAhC,EAAsCF,EAAtC,CAAyCC,KAAzC,CAA+C,mBAA/C;AACA,EALD;;AAOAJ,IAAG,+CAAH,EAAoD,YACpD;AACC,MAAMC,YAAY,kCAAlB;;AAEA,oBAAOA,UAAU,aAAV,EAAyBI,IAAhC,EAAsCF,EAAtC,CAAyCC,KAAzC,CAA+C,aAA/C;AACA,EALD;;AAOAJ,IAAG,qBAAH,EAA0B,YAC1B;AACC,MAAMC,YAAY,iCAAmB,mBAAnB,EAAwC,GAAxC,EAA6C,IAA7C,CAAlB;;AAEA,oBAAOA,UAAU,IAAV,EAAgBI,IAAvB,EAA6BF,EAA7B,CAAgCC,KAAhC,CAAsC,SAAtC;AACA,EALD;AAMA,CA5DD","file":"template formatter.test.js","sourcesContent":["import { expect } from 'chai'\n\nimport template_formatter from '../source/template formatter'\n\ndescribe('template formatter', function()\n{\n\tit('should format a phone number', function()\n\t{\n\t\tconst formatter = template_formatter('x (xxx) xxx-xx-xx')\n\n\t\texpect(formatter('').template).to.equal('x (xxx) xxx-xx-xx')\n\n\t\texpect(formatter('8').text).to.equal('8')\n\t\texpect(formatter('88').text).to.equal('8 (8')\n\t\texpect(formatter('880').text).to.equal('8 (80')\n\t\texpect(formatter('8800').text).to.equal('8 (800')\n\t\texpect(formatter('88005').text).to.equal('8 (800) 5')\n\t\texpect(formatter('880055').text).to.equal('8 (800) 55')\n\t\texpect(formatter('8800555').text).to.equal('8 (800) 555')\n\t\texpect(formatter('88005553').text).to.equal('8 (800) 555-3')\n\t\texpect(formatter('880055535').text).to.equal('8 (800) 555-35')\n\t\texpect(formatter('8800555353').text).to.equal('8 (800) 555-35-3')\n\t\texpect(formatter('88005553535').text).to.equal('8 (800) 555-35-35')\n\t})\n\n\tit('should format for edge case templates', function()\n\t{\n\t\tconst formatter = template_formatter('(x x x)')\n\n\t\texpect(formatter('').text).to.equal('')\n\t\texpect(formatter('0').text).to.equal('(0')\n\t\texpect(formatter('00').text).to.equal('(0 0')\n\t\texpect(formatter('000').text).to.equal('(0 0 0)')\n\t\t// More than the template can handle\n\t\texpect(formatter('0000').text).to.equal('(0 0 0)')\n\t})\n\n\tit('should default to \"x\" placeholder', function()\n\t{\n\t\tconst formatter = template_formatter('A (AAA) AAA-AA-AA')\n\n\t\texpect(formatter('88005553535').text).to.equal('A (AAA) AAA-AA-AA')\n\t})\n\n\tit('should accept custom placeholder', function()\n\t{\n\t\tconst formatter = template_formatter('A (AAA) AAA-AA-AA', 'A')\n\n\t\texpect(formatter('88005553535').text).to.equal('8 (800) 555-35-35')\n\t})\n\n\tit('should skip formatting when given no template', function()\n\t{\n\t\tconst formatter = template_formatter()\n\n\t\texpect(formatter('88005553535').text).to.equal('88005553535')\n\t})\n\n\tit('should close braces', function()\n\t{\n\t\tconst formatter = template_formatter('x (xxx) xxx-xx-xx', 'x', true)\n\n\t\texpect(formatter('88').text).to.equal('8 (8  )')\n\t})\n})"]}